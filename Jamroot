
	#################
	# Usage:
	# 
	# Targets:
	#     dist     : full build & installation 
	#     tests    : run unit-test suite
	# 
	# Options:
	#     --no-<plugin>    : removes plugin <plugin> from build list
	#
	#################

		
import os ;
import set ;

## Project specific rules
 
local rule plugins-selection ( existing-plugins * ) {
	local argv = [ modules.peek : ARGV ] ;
	local no-parameter = [ MATCH --no-(.*) : $(argv) ] ;
	local wrong = [ set.difference $(no-parameter) : $(existing-plugins) ] ;
	if $(wrong)	{
		ECHO "error: wrong plugin name '$(wrong[1])' in the --no-<plugin> option." ;
		EXIT ;
	}
	return [ set.difference $(existing-plugins) : $(no-parameter) ] ;
}
local rule check-required-env ( var ) {
	if ! $($(var)) {
		EXIT Missing variable $(var) ;
	}
}


## Configuration

local 				BOOST_ROOT 			= [ modules.peek : BOOST_ROOT ] ; 
check-required-env 	BOOST_ROOT ;

use-project /boost 						: $(BOOST_ROOT) ;
use-project /duke.host     : src/libraries/dukehost ;
use-project /duke.plugin   : src/libraries/dukeplugin ;

project : requirements <threading>multi
		: build-dir bin	;


## Main targets

explicit 
         duke.plugin
         duke.host
		 tests
		 dist ;

alias duke.plugin       : /duke.plugin//duke.plugin ;
alias duke.host         : /duke.host//duke.host ;
alias tests             : [ glob src/tests/* ] ;

install dist :
	duke.host
	:
	 <install-dependencies>on 
	 <install-type>SHARED_LIB 
	 <install-type>IMPORT_LIB 
	 <install-type>SEARCHED_LIB 
	 <install-type>LIB
	 <install-type>EXE
	 <variant>debug:<location>dist/debug
	 <variant>release:<location>dist/release
	;
